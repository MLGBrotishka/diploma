syntax = "proto3";

package migration;

option go_package = "migrator/api/migrator";


import "google/api/annotations.proto"; // Импортируем аннотации для REST
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    host: "localhost:8080";
};

// Определение сервиса
service MigrationService {
    // Создание новой миграции
    rpc CreateMigration (CreateMigrationRequest) returns (CreateMigrationResponse) {
        option (google.api.http) = {
            post: "/v1/migrations"
            body: "*"
        };
    }

    // Применение миграций
    rpc ApplyMigration (ApplyMigrationRequest) returns (ApplyMigrationResponse) {
        option (google.api.http) = {
            post: "/v1/migrations/apply"
            body: "*"
        };
    }

    // Откат миграции
    rpc RollbackMigration (RollbackMigrationRequest) returns (RollbackMigrationResponse) {
        option (google.api.http) = {
            post: "/v1/migrations/{migration_id}/rollback"
            body: "*"
        };
    }

    // Получение списка миграций
    rpc ListMigrations (ListMigrationsRequest) returns (ListMigrationsResponse) {
        option (google.api.http) = {
            get: "/v1/migrations"
        };
    }

    // Получение конкретной миграции
    rpc GetMigration (GetMigrationRequest) returns (GetMigrationResponse) {
        option (google.api.http) = {
            get: "/v1/migrations/{migration_id}"
        };
    }
}

// Запрос для создания миграции
message CreateMigrationRequest {
    string name = 1;                // Название миграции
    string description = 2;         // Описание миграции
    string script = 3;              // Текст скрипта миграции
    string rollback_script = 4;     // Текст скрипта отката миграции
    int64 user_id = 5;              // Идентификатор пользователя, создающего миграцию
}

// Ответ на запрос для создания миграции
message CreateMigrationResponse {
    int64 migration_id = 1;    // Уникальный идентификатор созданной миграции
}

// Запрос для применения миграций
message ApplyMigrationRequest {
    repeated int64 migration_ids = 1;    // Уникальные идентификаторы миграций в соответствии с порядком применения
    int64 user_id = 2;         // Идентификатор пользователя, применяющего миграцию
}

// Ответ на запрос для применения миграций
message ApplyMigrationResponse {
    string applied_at = 1;     // Дата и время применения миграции
}

// Запрос для отката миграции
message RollbackMigrationRequest {
    int64 migration_id = 1;    // Уникальный идентификатор миграции
    int64 user_id = 2;         // Идентификатор пользователя, выполняющего откат
}

// Ответ на запрос для отката миграции
message RollbackMigrationResponse {
    string rolled_back_at = 1; // Дата и время отката миграции
}

// Запрос для получения списка миграций
message ListMigrationsRequest {
    string status = 1; // Фильтр по статусу (например, "pending", "applied", "rolled_back")
}

// Информация о миграции
message MigrationInfo {
    int64 id = 1;                       // Уникальный идентификатор миграции
    string name = 2;                    // Название миграции
    string description = 3;             // Описание миграции
    string script = 4;                  // Текст скрипта миграции
    string rollback_script = 5;         // Текст скрипта отката миграции
    string status = 6;                  // Текущий статус миграции
    int64 created_by = 7;               // Идентификатор пользователя, применившего миграцию
    string status_updated_at = 8;       // Дата и время обновления статуса миграции
}

// Ответ на запрос для получения списка миграций
message ListMigrationsResponse {
    repeated MigrationInfo migrations = 1; // Список миграций
}

// Запрос для получения миграции
message GetMigrationRequest {
    int64 migration_id = 1;    // Уникальный идентификатор миграции
}

// Ответ на запрос для получения миграции
message GetMigrationResponse {
    MigrationInfo migration = 1;    // Миграция
}