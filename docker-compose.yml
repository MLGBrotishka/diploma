version: "3.8"

services:
  migrator:
    container_name: migrator
    build: ./migrator/
    ports:
      - "50051:50051" # GRPC
      - "8080:8080" # HTTP
    environment:
      - APP_NAME=migrator
      - APP_VERSION=1.0.0
      - GRPC_PORT=50051
      - LOG_LEVEL=debug
      - POSTGRES_URL=postgres://user:password@postgres-database:5434/migrator?sslmode=disable
      - AUTH_GRPC_ADDR=auth:50052
    links: 
        - postgres-database
    networks:
      - default

  auth:
    container_name: auth
    build: ./auth/
    ports:
      - "50051:50052" # GRPC
      - "8080:8081" # HTTP
    environment:
      - APP_NAME=auth
      - APP_VERSION=1.0.0
      - GRPC_PORT=50051
      - LOG_LEVEL=debug
      - POSTGRES_URL=postgres://user:password@postgres-auth:5434/migrator?sslmode=disable
      - JWT_SECRET=secret
      - JWT_TTL=86400
    links: 
        - postgres-auth
    networks:
      - default
      
  migrator-swagger:
    container_name: migrator-swagger
    build:
      context: ./migrator
      dockerfile: Dockerfile.swagger
    ports:
      - "8081:8082" # HTTP
    depends_on:
      - migrator
    networks:
      - default

  migrator-godoc:
    container_name: migrator-godoc
    build:
      context: ./migrator
      dockerfile: Dockerfile.godoc
    ports:
      - "8082:8083" # HTTP
    depends_on:
      - migrator
    networks:
      - default

  auth-swagger:
    container_name: auth-swagger
    build:
      context: ./auth
      dockerfile: Dockerfile.swagger
    ports:
      - "8081:8084" # HTTP
    networks:
      - default

  auth-godoc:
    container_name: auth-godoc
    build:
      context: ./auth
      dockerfile: Dockerfile.godoc
    ports:
      - "8082:8085" # HTTP
    networks:
      - default

  postgres-database:
    container_name: postgres-database
    image: postgres:16
    restart: unless-stopped
    volumes:
      - "postgres_data:/data/postgres"
    ports:
      - 5434:5434
    command: ["postgres", "-p", "5434"]
    user: postgres
    environment:
      POSTGRES_DB: migrator
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready","--quiet", "-p", "5434"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
  
  postgres-auth:
    container_name: postgres-auth
    image: postgres:16
    restart: unless-stopped
    volumes:
      - "postgres_auth:/data/postgres"
    ports:
    - "5433:5433"
    command: ["postgres", "-p", "5433"]
    user: postgres
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready","--quiet", "-p", "5433"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  postgres_data: {}
  postgres_auth: {}
