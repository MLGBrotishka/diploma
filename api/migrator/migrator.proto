syntax = "proto3";

package migration;

option go_package = "migrator/api/migrator";

import "google/api/annotations.proto"; // Импортируем аннотации для REST

// Определение сервиса
service MigrationService {
    // Создание новой миграции
    rpc CreateMigration (CreateMigrationRequest) returns (CreateMigrationResponse) {
        option (google.api.http) = {
            post: "/v1/migrations"
            body: "*"
        };
    }

    // Применение миграции
    rpc ApplyMigration (ApplyMigrationRequest) returns (ApplyMigrationResponse) {
        option (google.api.http) = {
            post: "/v1/migrations/{migration_id}/apply"
            body: "*"
        };
    }

    // Откат миграции
    rpc RollbackMigration (RollbackMigrationRequest) returns (RollbackMigrationResponse) {
        option (google.api.http) = {
            post: "/v1/migrations/{migration_id}/rollback"
            body: "*"
        };
    }

    // Получение списка миграций
    rpc ListMigrations (ListMigrationsRequest) returns (ListMigrationsResponse) {
        option (google.api.http) = {
            get: "/v1/migrations"
        };
    }

    // Получение статуса конкретной миграции
    rpc GetMigrationStatus (GetMigrationStatusRequest) returns (GetMigrationStatusResponse) {
        option (google.api.http) = {
            get: "/v1/migrations/{migration_id}/status"
        };
    }
}

// Сообщения для создания миграции
message CreateMigrationRequest {
    string name = 1;           // Название миграции
    string description = 2;    // Описание миграции
    string script = 3;         // Текст скрипта миграции
    string rollback_script = 4; // Текст скрипта отката миграции
    int64 user_id = 5;         // Идентификатор пользователя, создающего миграцию
}

message CreateMigrationResponse {
    int64 migration_id = 1;    // Уникальный идентификатор созданной миграции
    string status = 2;         // Статус миграции после создания (например, "pending")
}

// Сообщения для применения миграции
message ApplyMigrationRequest {
    int64 migration_id = 1;    // Уникальный идентификатор миграции
    int64 user_id = 2;         // Идентификатор пользователя, применяющего миграцию
}

message ApplyMigrationResponse {
    int64 migration_id = 1;    // Уникальный идентификатор миграции
    string status = 2;         // Статус миграции после применения (например, "applied")
    string applied_at = 3;     // Дата и время применения миграции
}

// Сообщения для отката миграции
message RollbackMigrationRequest {
    int64 migration_id = 1;    // Уникальный идентификатор миграции
    int64 user_id = 2;         // Идентификатор пользователя, выполняющего откат
}

message RollbackMigrationResponse {
    int64 migration_id = 1;    // Уникальный идентификатор миграции
    string status = 2;         // Статус миграции после отката (например, "rolled_back")
    string rolled_back_at = 3; // Дата и время отката миграции
}

// Сообщения для получения списка миграций
message ListMigrationsRequest {
    string status = 1; // Фильтр по статусу (например, "pending", "applied", "rolled_back")
}

message MigrationInfo {
    int64 id = 1;               // Уникальный идентификатор миграции
    string name = 2;            // Название миграции
    string description = 3;     // Описание миграции
    string script_path = 4;     // Путь к файлу скрипта миграции
    string rollback_script = 5; // Путь к файлу скрипта отката миграции
    string status = 6;          // Текущий статус миграции
    int64 applied_by = 7;       // Идентификатор пользователя, применившего миграцию
    string applied_at = 8;      // Дата и время применения миграции
    int64 rolled_back_by = 9;   // Идентификатор пользователя, выполнившего откат
    string rolled_back_at = 10; // Дата и время отката миграции
}

message ListMigrationsResponse {
    repeated MigrationInfo migrations = 1; // Список миграций
}

// Сообщения для получения статуса миграции
message GetMigrationStatusRequest {
    int64 migration_id = 1;    // Уникальный идентификатор миграции
}

message GetMigrationStatusResponse {
    int64 migration_id = 1;    // Уникальный идентификатор миграции
    string status = 2;         // Текущий статус миграции
}